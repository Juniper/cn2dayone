#1 docker install
---
- name: Install required packages on Jumpshost
  hosts: ds1jumphost
  become: yes
  vars_prompt:
    - name: docker_username
      prompt: Enter Enterprise_Hub.juniper.net Username?
      private: false
    - name: docker_password
      prompt: Enter Password?

  tasks:
#1.1 Install Docker
    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: present
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker

#1.2 Docker Login & save credentials to a variable
    - name: Log into DockerHub
      docker_login:
        registry: "enterprise-hub.jnpr.net"
        username: "{{ docker_username }}"
        password: "{{ docker_password }}"
        state: present
        reauthorize: yes

    - name: Retrieve credenials into a variable
      command: base64 -w 0 /root/.docker/config.json
      register: baseoutput

#    - name: Print return into variable
#      debug:
#        var: baseoutput.stdout

#1.3 git clone :- git clone https://github.com/Juniper/contrail-networking.git
    - name: Clone a git repo
      command: git clone https://github.com/Juniper/contrail-networking.git
      args:
        chdir: /root/
        creates: /root/contrail-networking
#1.4 update the yaml deployer files with docker secret.
    - name: Find all files to replace text
      find:
        paths: "/root/contrail-networking/releases/22.4/k8s/multi-cluster/"
        patterns: "*.yaml"
      register: yaml_files

    - name: Add Encoded text inside yaml files
      ansible.builtin.replace:
        path: "{{ item.path }}"
        regexp: '<base64-encoded-credential>'
        replace: '{{ baseoutput.stdout }}'
      with_items: "{{ yaml_files.files }}"

#1.5 update correct enterprise-hub.jnpr.net
    - name: Replace enterprise-hub.juniper.net to enterprise-hub.jnpr.net
      ansible.builtin.replace:
        path: "{{ item.path }}"
        regexp: 'enterprise-hub.juniper.net'
        replace: 'enterprise-hub.jnpr.net'
      with_items: "{{ yaml_files.files }}"


#2 Fetch .kube/config from central into dsjumphost
- name: fetch kube file from central to ds1
  hosts: all
  tasks:
     - name: Fetch the file from the centraljumphost to ctrl
       run_once: yes
       fetch: src=/root/.kube/config dest=/root/central_kubeconfig flat=yes
       when: " inventory_hostname == 'centraljumphost' "

     - name: Copy the file from ctrl to ds1jumphost
       copy: src=/root/central_kubeconfig dest=/root/central_kubeconfig
       when: "inventory_hostname == 'ds1jumphost'"
   
#3 Create secret on ds2 jumphost using central kubeconfig
- name: Create secret using fetched kubeconfig from centralctrl and deploy deployer on ds1cluster
  hosts: ds1jumphost
  tasks: 
    - name: Create namespace on ds1cluster
      command: "kubectl create ns contrail-deploy"
#      command: "echo -e 'apiVersion: v1\nkind: Namespace\nmetadata:\n  name: contrail-deploy' | kubectl apply -f -"       
      register: output_deploy_ns

    - name: Pause for 1 minutes to build app cache
      ansible.builtin.pause:
        minutes: 1

    - name: Create secret using central kube config
      command: "kubectl create secret generic central-kubeconfig -n contrail-deploy --from-file=kubeconfig=/root/central_kubeconfig"
      register: output_create_secret_ds1
      ignore_errors: yes
#      failed_when: "'already exists' not in output_create_secret_ds1.stderr"

    - name: Pause for 1 minutes to build app cache
      ansible.builtin.pause:
        minutes: 1
     
#4 Apply ds cluster deployer
    - name: Deploy ds deployer
      command: "kubectl apply -f /root/contrail-networking/releases/22.4/k8s/multi-cluster/distributed_cluster_deployer_example.yaml"
      register: output_deploy_deployer

    - name: Pause for 1 minutes to build app cache
      ansible.builtin.pause:
        minutes: 1

    - name: Deploy ds certmanager
      command: "kubectl apply -f /root/contrail-networking/releases/22.4/k8s/multi-cluster/distributed_cluster_certmanager_example.yaml"
      register: output_certmanager_deployer

##For centraljumphost
#5 Fetch .kube/config from dsjumphost to centraljumphost
- name: fetch kube file from ds1jumphost to centraljumphost
  hosts: all
  tasks:
     - name: Fetch the file from the ds1jumphost to ctrl
       #run_once: yes
       fetch: src=/root/.kube/config dest=/root/ds1_kubeconfig flat=yes
       when: " inventory_hostname == 'ds1jumphost'"

     - name: Copy the file from ctrl to centraljumphost
       copy: src=/root/ds1_kubeconfig dest=/root/ds1_kubeconfig
       when: "inventory_hostname == 'centraljumphost'"

#6 Create secret using the fetched secret
- name: Create secret using fetched kubeconfig from ds1jumphost and deploy kubemanager on centralcluster
  hosts: centraljumphost
  tasks:
    - name: Create secret using ds1 kube config
      command: "kubectl create secret generic ds1-kubeconfig -n contrail --from-file=kubeconfig=/root/ds1_kubeconfig"
      register: output_create_secret_ds1
      ignore_errors: yes

#7 Prepare kubemanager yaml & apply
    - name: Copy kubemanager yaml into centraljumphost
      ansible.builtin.copy:
        src: /root/cn2_deploy_ansible/cn2_ds1_ansible/kubemanager_ds1.yaml
        dest: /root/kubemanager_ds1.yaml

    - name: Pause for 1 minutes to build app cache
      ansible.builtin.pause:
        minutes: 1

    - name: Deploy kubemanager yaml on central for dscluster
      command: "kubectl apply -f /root/kubemanager_ds1.yaml"
      register: output_kube_manager_deploy

    - name: Pause for 1 minutes to build app cache
      ansible.builtin.pause:
        minutes: 1

##For DSjumphost
#8  Apply the vrouter yaml  
- name: Apply vrouter yaml on ds1cluster
  hosts: ds1jumphost
  tasks:
    - name: Deploy vrouter yaml
      command: "kubectl apply -f /root/contrail-networking/releases/22.4/k8s/multi-cluster/distributed_cluster_vrouter_example.yaml"
      register: output_vrouter_ds1

    - name: Pause for 1 minutes to build app cache
      ansible.builtin.pause:
        minutes: 1
#7 Reset the DNS on vhost interface to elevate the chicken egg state
    - name: Reset DNS resolution
      register: dns_reset
      command: resolvectl dns vhost0 66.129.233.81
      retries : 30
      delay: 15
      register: result_reset_dns
      until: result_reset_dns.rc == 0
      delegate_to: "{{ item }}"
      delegate_facts: true
      loop: "{{ groups['ds1k8svm'] }}"  
